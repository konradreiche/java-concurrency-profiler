option java_package = "de.fu.profiler.service";
option java_outer_classname = "AgentMessageProtos";

message AgentMessage {

	required int64 timestamp = 1;
	required int64 systemTime = 2;
	required int32 jvm_id = 3;

	message ThreadEvent {

		repeated Thread thread = 1;

		enum EventType {
			STARTED = 0;
			ENDED = 1;
			NONE = 2;
		}

		required EventType eventType = 2 [default = NONE];
	}

	message StackTrace {
	
		required Thread thread = 1;
		repeated StackTraceElement stackTrace = 2;
		
		message StackTraceElement {

			required string className = 1;
			required string methodName = 2;
			required string methodSignature = 3;
			required string fileName = 4;
			required bool isNativeMethod = 5;
		}
	}

	message MonitorEvent {
	
		required Thread thread = 1;

		enum EventType {
			WAIT = 0;
			WAITED = 1;
			NOTIFY = 2;
			NOTIFY_ALL = 3;
			CONTENDED = 4;
			ENTERED = 5;
			NONE = 6;
		}

		required EventType eventType = 2 [default = NONE];
		optional Monitor monitor = 3;
		required string className = 4;
		required string methodName = 5;
		repeated StackTrace stackTraces = 6;
	}

	message MethodEvent {

		required string className = 1;
		required string methodName = 2;
		required int64 clockCycles = 3;
		required int64 timeTaken = 4;
		required Thread thread = 5;
	}

	message Thread {

		required int32 id = 1;
		required string name = 2;
		required int32 priority = 3;

		enum State {
			NEW = 0;
			RUNNABLE = 1;
			BLOCKED = 2;
			WAITING = 3;
			TIMED_WAITING = 4;
			TERMINATED = 5;
		}

		required State state = 4 [default = NEW];
		required bool isContextClassLoaderSet = 5;		
		required bool isDaemon = 6;
		optional int64 cpuTime = 7;
	}

	message StackTraceElement {

		required string className = 1;
		required string method = 2;

	}

	message Monitor {

		required int64 id = 1;
		optional int32 owningThread = 2;
		required int32 entryCount = 3;
		required int32 waiterCount = 4;
		required int32 notifyWaiterCount = 5;
		repeated Thread waiterThreads = 6;
		repeated Thread notifyWaiterThreads = 7;
	}

	optional ThreadEvent threadEvent = 4;
	optional MonitorEvent monitorEvent = 5;
	optional MethodEvent methodEvent = 6;
}
